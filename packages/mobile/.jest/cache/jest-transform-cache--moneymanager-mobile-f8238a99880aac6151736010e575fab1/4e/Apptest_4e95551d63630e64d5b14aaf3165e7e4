8fb2dfa151d07998ab6f538a8c2ea7b2
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _reactNative2 = require("@testing-library/react-native");

function Example() {
  var _React$useState = _react.default.useState(''),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      name = _React$useState2[0],
      setUser = _React$useState2[1];

  var _React$useState3 = _react.default.useState(false),
      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
      show = _React$useState4[0],
      setShow = _React$useState4[1];

  return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.TextInput, {
    value: name,
    onChangeText: setUser,
    testID: "input"
  }), _react.default.createElement(_reactNative.Button, {
    title: "Print Username",
    onPress: function onPress() {
      setTimeout(function () {
        setShow(!show);
      }, Math.floor(Math.random() * 200));
    }
  }), show && _react.default.createElement(_reactNative.Text, {
    testID: "printed-username"
  }, name));
}

test('examples of some things', function _callee() {
  var _render, getByTestId, getByText, queryByTestId, toJSON, famousWomanInHistory, input, button;

  return _regenerator.default.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _render = (0, _reactNative2.render)(_react.default.createElement(Example, null)), getByTestId = _render.getByTestId, getByText = _render.getByText, queryByTestId = _render.queryByTestId, toJSON = _render.toJSON;
          famousWomanInHistory = 'Ada Lovelace';
          input = getByTestId('input');

          _reactNative2.fireEvent.changeText(input, famousWomanInHistory);

          button = getByText('Print Username');

          _reactNative2.fireEvent.press(button);

          _context.next = 8;
          return _regenerator.default.awrap((0, _reactNative2.waitFor)(function () {
            return expect(queryByTestId('printed-username')).toBeTruthy();
          }));

        case 8:
          expect(getByTestId('printed-username').props.children).toBe(famousWomanInHistory);
          expect(toJSON()).toMatchSnapshot();

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, null, Promise);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC10ZXN0LnRzeCJdLCJuYW1lcyI6WyJFeGFtcGxlIiwiUmVhY3QiLCJ1c2VTdGF0ZSIsIm5hbWUiLCJzZXRVc2VyIiwic2hvdyIsInNldFNob3ciLCJzZXRUaW1lb3V0IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwidGVzdCIsImdldEJ5VGVzdElkIiwiZ2V0QnlUZXh0IiwicXVlcnlCeVRlc3RJZCIsInRvSlNPTiIsImZhbW91c1dvbWFuSW5IaXN0b3J5IiwiaW5wdXQiLCJmaXJlRXZlbnQiLCJjaGFuZ2VUZXh0IiwiYnV0dG9uIiwicHJlc3MiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwicHJvcHMiLCJjaGlsZHJlbiIsInRvQmUiLCJ0b01hdGNoU25hcHNob3QiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBLFNBQVNBLE9BQVQsR0FBbUI7QUFBQSx3QkFDT0MsZUFBTUMsUUFBTixDQUFlLEVBQWYsQ0FEUDtBQUFBO0FBQUEsTUFDVkMsSUFEVTtBQUFBLE1BQ0pDLE9BREk7O0FBQUEseUJBRU9ILGVBQU1DLFFBQU4sQ0FBZSxLQUFmLENBRlA7QUFBQTtBQUFBLE1BRVZHLElBRlU7QUFBQSxNQUVKQyxPQUZJOztBQUlqQixTQUNFLDZCQUFDLGlCQUFELFFBQ0UsNkJBQUMsc0JBQUQ7QUFBVyxJQUFBLEtBQUssRUFBRUgsSUFBbEI7QUFBd0IsSUFBQSxZQUFZLEVBQUVDLE9BQXRDO0FBQStDLElBQUEsTUFBTSxFQUFDO0FBQXRELElBREYsRUFFRSw2QkFBQyxtQkFBRDtBQUNFLElBQUEsS0FBSyxFQUFDLGdCQURSO0FBRUUsSUFBQSxPQUFPLEVBQUUsbUJBQU07QUFHYkcsTUFBQUEsVUFBVSxDQUFDLFlBQU07QUFDZkQsUUFBQUEsT0FBTyxDQUFDLENBQUNELElBQUYsQ0FBUDtBQUNELE9BRlMsRUFFUEcsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxLQUFnQixHQUEzQixDQUZPLENBQVY7QUFHRDtBQVJILElBRkYsRUFZR0wsSUFBSSxJQUFJLDZCQUFDLGlCQUFEO0FBQU0sSUFBQSxNQUFNLEVBQUM7QUFBYixLQUFpQ0YsSUFBakMsQ0FaWCxDQURGO0FBZ0JEOztBQUVEUSxJQUFJLENBQUMseUJBQUQsRUFBNEI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG9CQUMwQiwwQkFBTyw2QkFBQyxPQUFELE9BQVAsQ0FEMUIsRUFDdkJDLFdBRHVCLFdBQ3ZCQSxXQUR1QixFQUNWQyxTQURVLFdBQ1ZBLFNBRFUsRUFDQ0MsYUFERCxXQUNDQSxhQURELEVBQ2dCQyxNQURoQixXQUNnQkEsTUFEaEI7QUFFeEJDLFVBQUFBLG9CQUZ3QixHQUVELGNBRkM7QUFJeEJDLFVBQUFBLEtBSndCLEdBSWhCTCxXQUFXLENBQUMsT0FBRCxDQUpLOztBQUs5Qk0sa0NBQVVDLFVBQVYsQ0FBcUJGLEtBQXJCLEVBQTRCRCxvQkFBNUI7O0FBRU1JLFVBQUFBLE1BUHdCLEdBT2ZQLFNBQVMsQ0FBQyxnQkFBRCxDQVBNOztBQVE5Qkssa0NBQVVHLEtBQVYsQ0FBZ0JELE1BQWhCOztBQVI4QjtBQUFBLDRDQVV4QiwyQkFBUTtBQUFBLG1CQUFNRSxNQUFNLENBQUNSLGFBQWEsQ0FBQyxrQkFBRCxDQUFkLENBQU4sQ0FBMENTLFVBQTFDLEVBQU47QUFBQSxXQUFSLENBVndCOztBQUFBO0FBWTlCRCxVQUFBQSxNQUFNLENBQUNWLFdBQVcsQ0FBQyxrQkFBRCxDQUFYLENBQWdDWSxLQUFoQyxDQUFzQ0MsUUFBdkMsQ0FBTixDQUF1REMsSUFBdkQsQ0FDRVYsb0JBREY7QUFHQU0sVUFBQUEsTUFBTSxDQUFDUCxNQUFNLEVBQVAsQ0FBTixDQUFpQlksZUFBakI7O0FBZjhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQTVCLENBQUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtCdXR0b24sIFRleHQsIFRleHRJbnB1dCwgVmlld30gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7ZmlyZUV2ZW50LCByZW5kZXIsIHdhaXRGb3J9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcblxuZnVuY3Rpb24gRXhhbXBsZSgpIHtcbiAgY29uc3QgW25hbWUsIHNldFVzZXJdID0gUmVhY3QudXNlU3RhdGUoJycpO1xuICBjb25zdCBbc2hvdywgc2V0U2hvd10gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG5cbiAgcmV0dXJuIChcbiAgICA8Vmlldz5cbiAgICAgIDxUZXh0SW5wdXQgdmFsdWU9e25hbWV9IG9uQ2hhbmdlVGV4dD17c2V0VXNlcn0gdGVzdElEPVwiaW5wdXRcIiAvPlxuICAgICAgPEJ1dHRvblxuICAgICAgICB0aXRsZT1cIlByaW50IFVzZXJuYW1lXCJcbiAgICAgICAgb25QcmVzcz17KCkgPT4ge1xuICAgICAgICAgIC8vIGxldCdzIHByZXRlbmQgdGhpcyBpcyBtYWtpbmcgYSBzZXJ2ZXIgcmVxdWVzdCwgc28gaXQncyBhc3luY1xuICAgICAgICAgIC8vICh5b3UnZCB3YW50IHRvIG1vY2sgdGhpcyBpbWFnaW5hcnkgcmVxdWVzdCBpbiB5b3VyIHVuaXQgdGVzdHMpLi4uXG4gICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBzZXRTaG93KCFzaG93KTtcbiAgICAgICAgICB9LCBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyMDApKTtcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgICB7c2hvdyAmJiA8VGV4dCB0ZXN0SUQ9XCJwcmludGVkLXVzZXJuYW1lXCI+e25hbWV9PC9UZXh0Pn1cbiAgICA8L1ZpZXc+XG4gICk7XG59XG5cbnRlc3QoJ2V4YW1wbGVzIG9mIHNvbWUgdGhpbmdzJywgYXN5bmMgKCkgPT4ge1xuICBjb25zdCB7Z2V0QnlUZXN0SWQsIGdldEJ5VGV4dCwgcXVlcnlCeVRlc3RJZCwgdG9KU09OfSA9IHJlbmRlcig8RXhhbXBsZSAvPik7XG4gIGNvbnN0IGZhbW91c1dvbWFuSW5IaXN0b3J5ID0gJ0FkYSBMb3ZlbGFjZSc7XG5cbiAgY29uc3QgaW5wdXQgPSBnZXRCeVRlc3RJZCgnaW5wdXQnKTtcbiAgZmlyZUV2ZW50LmNoYW5nZVRleHQoaW5wdXQsIGZhbW91c1dvbWFuSW5IaXN0b3J5KTtcblxuICBjb25zdCBidXR0b24gPSBnZXRCeVRleHQoJ1ByaW50IFVzZXJuYW1lJyk7XG4gIGZpcmVFdmVudC5wcmVzcyhidXR0b24pO1xuXG4gIGF3YWl0IHdhaXRGb3IoKCkgPT4gZXhwZWN0KHF1ZXJ5QnlUZXN0SWQoJ3ByaW50ZWQtdXNlcm5hbWUnKSkudG9CZVRydXRoeSgpKTtcblxuICBleHBlY3QoZ2V0QnlUZXN0SWQoJ3ByaW50ZWQtdXNlcm5hbWUnKS5wcm9wcy5jaGlsZHJlbikudG9CZShcbiAgICBmYW1vdXNXb21hbkluSGlzdG9yeSxcbiAgKTtcbiAgZXhwZWN0KHRvSlNPTigpKS50b01hdGNoU25hcHNob3QoKTtcbn0pO1xuIl19